generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  fname          String?
  lname          String?
  email         String?         @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  // Optional for WebAuthn support
  Authenticator Authenticator[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Authenticator {
  credentialID         String  @unique
  userId               String
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, credentialID])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Lead {
  id            Int      @id @default(autoincrement())
  fname         String
  lname         String
  gender        String?  
  year          Int?
  email         String   @unique
  mobile        String?
  homePhone     String?
  otherPhone    String?
  status        String?
  type          String?
  emailOpt      Boolean?
  address1      String?
  address2      String?
  city          String?
  postalCode    String?
  descrip       String?
  customDescrip String?
  regularPro    Boolean?
  enrich        Boolean?
  homeSchool    Boolean?
  examPrep      Boolean?
  home          Boolean?
  summerPro     Boolean?
  assessOnly    Boolean?
  other         Boolean?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
}

model Student {
  id           Int      @id @default(autoincrement())
  parent_id    Int
  fname        String
  lname        String
  birth        DateTime?
  gender       String
  pguardian    String?
  sguardian    String?
  religion     String?
  allerigies   String?
  a_pschool    String?
  a_sschool    String?
  a_yeargrp    String?
  a_ies        String?
  a_ims        String?
  a_ics        String?
  a_hs         String?
  l_startdate  String?
  l_pcentre    String?
  l_scentre    String?
  l_ies        String?
  l_ims        String?
  l_ics        String?
  l_hs         String?
  l_ptutor     String?
  l_otutor     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
}

model Teacher {
  id           Int      @id @default(autoincrement())
  fname        String
  lname        String
  gender       String?
  email        String   @unique
  birth        String?
  mobile       String?
  status       String?
  address1     String?
  address2     String?
  city         String?
  county       String?
  country      String?
  postalCode   Int?
  primarySc    String? 
  secondarySc  String? 
  collegeForm  String? 
  undergraU    String?
  postgraU     String?
  phdU         String? 
  academicY    Int?
  curStu       String? 
  religion     String?
  allergies    String?
  descript     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
}

model School {
  id           Int      @id @default(autoincrement())
  sname       String
  level       String?
  type        String?  
  enroll      String?
  site         String?
  sitePsta     String?
  district     String?
  mobile       String?
  number_s     Int?
  area         String?
  email        String   @unique
  address1     String?
  address2     String?
  city         String?
  county       String?
  country      String?
  postalCode   Int?
  descrip      String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
}

model Comcon {
  id           Int      @id @default(autoincrement())
  fname        String
  lname        String
  institution  String?
  role         String?  
  mobile       String?
  email        String   @unique
  address1     String?
  address2     String?
  city         String?
  county       String?
  country      String?
  postalCode   Int?
  descrip      String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
}