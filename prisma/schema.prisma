generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  fname          String?
  lname          String?
  email         String?         @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  // Optional for WebAuthn support
  Authenticator Authenticator[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Authenticator {
  credentialID         String  @unique
  userId               String
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, credentialID])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Lead {
  id            Int      @id @default(autoincrement())
  fname         String
  lname         String
  gender        String?  
  year          Int?
  email         String   @unique
  mobile        String?
  homePhone     String?
  otherPhone    String?
  status        String?
  emailOpt      Boolean?
  address1      String?
  address2      String?
  city          String?
  postalCode    String?
  descrip       String?
  customDescrip String?
  regularPro    Boolean?
  enrich        Boolean?
  homeSchool    Boolean?
  examPrep      Boolean?
  home          Boolean?
  summerPro     Boolean?
  assessOnly    Boolean?
  other         Boolean?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
}

model Student {
  id           Int      @id @default(autoincrement())
  parent_id    Int
  fname        String
  lname        String
  year         String?
  schoolYear   String?
  school       String?
  teacher      String?
  gender       String?
  birth        String?
  account      String?
  virCen       String?
  descript     String?
  medicInfo    String?
  cenDir       String?
  subMat       String?
  stuNote      String?
  mediaRele    Boolean?
  leaveUnder   Boolean?
  contactTeach Boolean?
  scholarShip  Boolean?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
}
